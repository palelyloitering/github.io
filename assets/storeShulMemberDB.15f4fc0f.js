import{af as q}from"./index.e8fcc9d7.js";import{c as W,q as l,o as i,d as k,H as v,w as u,g as p,f as I,a as f,b as z}from"./storeYahrzeits.e9386814.js";const h=W(k,"shulMembers");l(h,i("edate","desc"));const A=q("storeShulMembersDB",{state:()=>({currentWeek:[],shul:[],members:{},tempMembers:{},results:[],listResults:{}}),actions:{async setCurrentWeek(t){const a=new v(t).onOrBefore(6);this.currentWeek=[];for(let s=0;s<7;s++){let r=a.add(s,"day");this.currentWeek.push(r)}return console.log("My week is",this.currentWeek),this.currentWeek},async getShulMembersForWC_other(){for(const t in this.currentWeek){let e=[];console.log(this.currentWeek[t],"is where we zre in current week");let a=new v(this.currentWeek[t]);console.log("yahrzeit is",a),e=await this.getShulMembersForHDay(a),console.log("the sub-proc returned",e),this.members[t]=e}return this.members},async getShulMembersForList(t){let e={};console.log(t);for(const a of t)if(typeof a=="string"){console.log("We have a string now. Key: "+a+", actualDay: "+a);const s=l(h,u("haShavuaDates","array-contains",a),i("shulMemberSurname")),o=(await p(s)).docs.map(n=>n.data());e[a]=o,this.$patch({listResults:e})}else for(const[s,r]of Object.entries(a))if(Array.isArray(r)){if(r.length===1){const o=l(h,u("haShavuaDates","array-contains",r[0]),i("shulMemberSurname")),m=(await p(o)).docs.map(S=>S.data());e[s]=m,this.$patch({listResults:e})}if(r.length===2){const o=l(h,u("haShavuaDates","array-contains",r[0]),i("shulMemberSurname")),n=l(h,u("haShavuaDates","array-contains",r[1]),i("shulMemberSurname")),S=(await p(o)).docs.map(d=>d.data()),M=(await p(n)).docs.map(d=>d.data());let b=[...S,...M];b.sort(function(d,y){return d.shulMemberSurname<y.shulMemberSurname?-1:d.shulMemberSurname>y.shulMemberSurname?1:0}),e[s]=b,this.$patch({listResults:e})}else if(r.length===3){const o=l(h,u("haShavuaDates","array-contains",r[0]),i("shulMemberSurname")),n=l(h,u("haShavuaDates","array-contains",r[1]),i("shulMemberSurname")),m=l(h,u("haShavuaDates","array-contains",r[2]),i("shulMemberSurname")),D=(await p(o)).docs.map(c=>c.data()),b=(await p(n)).docs.map(c=>c.data()),y=(await p(m)).docs.map(c=>c.data());let g=[...D,...b,...y];g.sort(function(c,w){return c.shulMemberSurname<w.shulMemberSurname?-1:c.shulMemberSurname>w.shulMemberSurname?1:0}),e[s]=g,this.$patch({listResults:e})}}},async getShulMembersForWC(){for(const t in this.currentWeek){let e=[],a=I(this.currentWeek[t]);const s=await l(h,u("haShavuaDates","array-contains",a),i("shulMemberSurname"));f(s,r=>{r.docs.map(n=>n.data()).forEach(n=>e.push(n.shulMemberFullName)),e=[...new Set(e)],console.log("dayResults is",e," and n is",t),this.members[t]=e}),this.members[t]=e}return this.members},async getAllShulMembers(){const t=await l(h);return f(t,e=>{e.forEach(a=>{let s={...a.data()};s.identifier=a.id,this.members[a.data().shulMemberSubRef]=s})}),this.members},async addTempShulMember(t,e){let s=[e.date];t.haShavuaDates=s;let r=[];r.push(e),t.yahrzeits=r;let o={};o[t.shulMemberSubRef]=t,this.$patch({tempMembers:o})},async updateTempShulMember(t,e){let a={},s=this.tempMembers[t];const r=e.date;let o=s.haShavuaDates;o.push(r),s.haShavuaDates=o;let n=s.yahrzeits;n.push(e),s.yahrzeits=n,a[t]=s,this.$patch({tempMembers:a})},async writeTempDataToCloud(){for(let[t,e]of Object.entries(this.tempMembers)){console.log(`${t}`),e.updateDate=new Date;const a=await z(h,e);console.log("Document written with ID: ",a.id)}},async getShulMembersForSurname(t){console.log("I'm here with",t);const e=await l(h,u("shulMemberSurname","==",t));return console.log(e),f(e,a=>{a.forEach(s=>{console.log(s.data());let r={...s.data()};r.identifier=s.id,this.results.push(r)})}),this.results},async getShulMembersForHDay(t){this.results=[],console.log("I zeroed results and it is now",this.results);let e=t.getDate();e=e.toString().padStart(2,"0");let a=t.getMonthName();a=a.replace("Iyyar","Iyar").replace("Nisan","Nissan").replace("Tevet","Teveth").replace("Sh'vat","Shevat").replace("Tamuz","Tammuz").replace("Elul","Ellul").replace("Tishrei","Tishri").replace("Adar I","Adar 1").replace("Adar II","Adar 2");let s=e+" "+a;console.log("yahrzeit is",s);const r=await l(h,u("haShavuaDates","array-contains",s));return console.log("q is",r),f(r,o=>{o.forEach(n=>{console.log("result is ",n.data());let m={...n.data()};m.identifier=n.id,this.results.push(m)})}),console.log("and at the end of the subproc",this.results),this.results}}});export{A as u};
